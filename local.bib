@article{BEG+91,
author = {Blum, Manuel and Evans, W. and Gemmell, Peter and Kannan, Sampath and Naor, M.},
year = {1994},
month = {09},
pages = {225-244},
title = {Checking the correctness of memories},
volume = {12},
journal = {Algorithmica},
doi = {10.1007/BF01185212}
}

@inproceedings {SAG+18,
author = {Srinath Setty and Sebastian Angel and Trinabh Gupta and Jonathan Lee},
title = {Proving the correct execution of concurrent services in zero-knowledge},
booktitle = {13th USENIX Symposium on Operating Systems Design and Implementation (OSDI 18)},
year = {2018},
isbn = {978-1-939133-08-3},
address = {Carlsbad, CA},
pages = {339--356},
url = {https://www.usenix.org/conference/osdi18/presentation/setty},
publisher = {USENIX Association},
month = oct
}

@inproceedings{Pantry,
author = {Braun, Benjamin and Feldman, Ariel J. and Ren, Zuocheng and Setty, Srinath and Blumberg, Andrew J. and Walfish, Michael},
title = {Verifying Computations with State},
year = {2013},
isbn = {9781450323888},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2517349.2522733},
doi = {10.1145/2517349.2522733},
abstract = {When a client outsources a job to a third party (e.g., the cloud), how can the client check the result, without re-executing the computation? Recent work in proof-based verifiable computation has made significant progress on this problem by incorporating deep results from complexity theory and cryptography into built systems. However, these systems work within a stateless model: they exclude computations that interact with RAM or a disk, or for which the client does not have the full input.This paper describes Pantry, a built system that overcomes these limitations. Pantry composes proof-based verifiable computation with untrusted storage: the client expresses its computation in terms of digests that attest to state, and verifiably outsources that computation. Using Pantry, we extend verifiability to MapReduce jobs, simple database queries, and interactions with private state. Thus, Pantry takes another step toward practical proof-based verifiable computation for realistic applications.},
booktitle = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
pages = {341–357},
numpages = {17},
location = {Farminton, Pennsylvania},
series = {SOSP '13}
}

@misc{LogUp,
      author = {Shahar Papini and Ulrich Haböck},
      title = {Improving logarithmic derivative lookups using {GKR}},
      howpublished = {Cryptology {ePrint} Archive, Paper 2023/1284},
      year = {2023},
      url = {https://eprint.iacr.org/2023/1284}
}